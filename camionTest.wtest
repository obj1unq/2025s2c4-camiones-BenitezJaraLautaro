import camion.*
import cosas.*

describe "Carga y descarga" {
  test "camion descargado se le carga a bumblebee y solo tiene a bumblebee" {
    camion.cargar(bumblebee)
    assert.equals(1, camion.cosas().size())
  }
  
  test "camion solo tiene a bumblebee y  Knight Rider" {
    camion.cargar(bumblebee)
    camion.cargar(knightRider)
    assert.equals(2, camion.cosas().size())
  }
  
  test "camnion con bumblebee y knightRider, tras descargar a bumblebee solo queda knightRider" {
    camion.cargar(bumblebee)
    camion.cargar(knightRider)
    camion.descargar(bumblebee)
    assert.equals(1, camion.cosas().size())
  }
  
  test "no puedo cargar a knightRider, porque ya esta cargado" {
    //camion.cosas() es una set, asique no se agrega
    camion.cargar(knightRider)
    camion.cargar(knightRider)
    assert.equals(1, camion.cosas().size())
  }
  
  test "no puedo descargar a bumblebee, porque no esta cargado" {
    assert.throwsException({ camion.descargar(bumblebee) })
  }
}

describe "Todo peso par" {
  test "el peso de bumblebee y 50 kg de arena a granal, ambos son par" {
    camion.cargar(bumblebee)
    camion.cargar(arenaAGranal)
    arenaAGranal.peso(50)
    assert.that(camion.esTodoElPesoPar())
  }
  
  test "el peso de bumblebee y 51 kg de arena a granal, ambos no son par" {
    camion.cargar(bumblebee)
    camion.cargar(arenaAGranal)
    arenaAGranal.peso(51)
    assert.notThat(camion.esTodoElPesoPar())
  }
}

describe "Hay alguno que pesa" {
  method initialize() {
    camion.cargar(bumblebee)
    camion.cargar(arenaAGranal)
    arenaAGranal.peso(50)
  }

  test "Camion con Bumblebee y 50 kg de arena a granel, tiene algo que pesa 50" {
    assert.that(camion.hayAlgoConPeso(50))
    
  }

  test "Camion con Bumblebee y 50 kg de arena a granel, tiene algo que pesa 800" {
    assert.that(camion.hayAlgoConPeso(800))
    
  }

  test "Camion con Bumblebee y 50 kg de arena a granel, no tiene nada que pese 500" {
    assert.notThat(camion.hayAlgoConPeso(500))
    
  }
}

describe "Peso y exceso de peso" {
  method initialize() {
    camion.cargar(bumblebee)
    paqueteDeLadrillos.cantLadrillos(300)
    camion.cargar(paqueteDeLadrillos)

  }
  test "camion cargado con bumblebee y paquete de 300 ladrillos, entonces el peso total es 2400 y no está excedido de peso." {
    assert.equals(2400, camion.pesoTotal())
    assert.notThat(camion.excedidoDePeso())
  }

  test "camion cargado con bumblebee y paquete de 400 ladrillos, entonces el peso total es 2600 y sí está excedido." {
    paqueteDeLadrillos.cantLadrillos(400)
    assert.equals(2600, camion.pesoTotal())
    assert.that(camion.excedidoDePeso())
    
  }
}

describe "cargas con nivel de peligro n" {
  method initialize() {
    camion.cargar(bumblebee)
    camion.cargar(bateriaAntiaerea)
    camion.cargar(residuosRadiactivos)

  }
  test "Camion cargado con Bumblebee, batería antiaérea y residuos radiactivos, si se pide algo de nivel 0 debe encontrar a la batería antiaérea" {
    assert.that(bateriaAntiaerea.nombre() == camion.objetoConNivelDePeligrosidad(0).nombre())

  }

  test "Camion cargado con Bumblebee, batería antiaérea y residuos radiactivos, si se pide algo de nivel 15 debe encontrar a Bumblebee." {
    assert.that(bumblebee.nombre() == camion.objetoConNivelDePeligrosidad(15).nombre())
    
  }

  test "Camion cargado con Bumblebee, batería antiaérea y residuos radiactivos, si se pide algo de nivel 200 debe encontrar a los residuos." {
    assert.that(residuosRadiactivos.nombre() == camion.objetoConNivelDePeligrosidad(200).nombre())
    
  }

  test "Camion cargado con Bumblebee, batería antiaérea y residuos radiactivos, si se pide algo de nivel 30 debe romper, porque no se encuentra nada." {
    assert.throwsException({ camion.objetoConNivelDePeligrosidad(30).nombre() })
    
  }

  test "Camion cargado con Bumblebee modo robot, batería antiaérea y residuos radiactivos, si se pide algo de nivel 30, entonces encuentra a Bumblebee." {
    bumblebee.transformarEnRobot()
    assert.that(bumblebee.nombre() == camion.objetoConNivelDePeligrosidad(30).nombre())
    
  }

  test "Camion cargado con Bumblebee modo robot, batería antiaérea con misiles cargados y residuos radiactivos, si se pide algo de peligrosidad 100 entonces encuentra a la batería." {
    bateriaAntiaerea.cargarMisiles()
    assert.that(bateriaAntiaerea.nombre() == camion.objetoConNivelDePeligrosidad(100).nombre())
    
  }
}

describe "Cosas peligrosas" {
  method initialize() {
    camion.cargar(knightRider)
    camion.cargar(bateriaAntiaerea)
    bateriaAntiaerea.cargarMisiles()
  }
  test "En las cosas más peligrosas de 15 sólo está la batería antiaérea" {
    assert.that(camion.cargasQueSuperenNivel_Peligro(15).contains(bateriaAntiaerea))
    assert.equals(1, camion.cargasQueSuperenNivel_Peligro(15).size())
    
  }

  test "En las cosas más peligrosas que Bumblebee sólo está la batería antiaérea." {
    assert.that(camion.cargasQueSuperanNivelPeligroDe(bumblebee).contains(bateriaAntiaerea))
    assert.equals(1, camion.cargasQueSuperanNivelPeligroDe(bumblebee).size())
    
  }

  test "Las cosas que superan 2 de peligrosidad son Knight Rider y la batería antiaérea." {
    assert.that(camion.cargasQueSuperenNivel_Peligro(2).contains(bateriaAntiaerea))
    assert.that(camion.cargasQueSuperenNivel_Peligro(2).contains(knightRider))
    assert.equals(2, camion.cargasQueSuperenNivel_Peligro(2).size())
    
  }

  test "Las cosas más peligrosas que el paquete de ladrillos son Knight Rider y la batería antiaérea." {
    assert.that(camion.cargasQueSuperanNivelPeligroDe(paqueteDeLadrillos).contains(knightRider))
    assert.that(camion.cargasQueSuperanNivelPeligroDe(paqueteDeLadrillos).contains(bateriaAntiaerea))
    assert.equals(2, camion.cargasQueSuperenNivel_Peligro(2).size())
    
  }

  test "No hay cosas más peligrosas que 200." {
    assert.that(camion.cargasQueSuperenNivel_Peligro(200).isEmpty())
    
  }

  test "No hay nada más peligroso que los residuos radiactivos." {
    assert.that(camion.cargasQueSuperanNivelPeligroDe(residuosRadiactivos).isEmpty())
    
  }


}

describe "Puede circular en ruta" {
  method initialize() {
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantLadrillos(300)
  }
  test "Si el camión tiene a Bumblebee en auto y un paquete de 300 ladrillos, puede circular en una ruta con nivel 20." {
    assert.that(camion.puedeCircularRuta(20))
    
  }

  test "Pero si el camión tiene el paquete de 400 ladrillos y Bumblebee en modo auto ya no puede circular en la ruta de nivel 20, por estar excedido de peso." {
    paqueteDeLadrillos.cantLadrillos(400)
    assert.notThat(camion.puedeCircularRuta(20))
    
  }

  test "Tampoco puede circular en una ruta de nivel 20 si tiene un paquete de 300 ladrillos y Bumblebee está en modo robot." {
    bumblebee.transformarEnRobot()
    assert.notThat(camion.puedeCircularRuta(20))
    
  }
}

describe "Contenedor portuario y embalaje de seguridad" {

  test "El contenedor portuario vacío pesa 100 y su peligrosidad es 0." {
    assert.that(contenedorPortuario.nivelPeligrosidad() == 0 and contenedorPortuario.peso() == 100)
    
  }

  test "El contenedor portuario que tiene a Knight Rider y 50 kg de arena a granel pesa 650 y su peligrosidad es 10." {
    contenedorPortuario.cargarObjeto(knightRider)
    contenedorPortuario.cargarObjeto(arenaAGranal)
    arenaAGranal.peso(50)
    assert.that(contenedorPortuario.nivelPeligrosidad() == 10 and contenedorPortuario.peso() == 650)
  }

  test "Si el embalaje de seguridad envuelve a Knight Rider, su peso es 500 y su peligrosidad es 5." {
    embalajeDeSeguridad.envolverObjeto(knightRider)
    assert.that(embalajeDeSeguridad.nivelPeligrosidad() == 5 and embalajeDeSeguridad.peso() == 500)
  }

  test "Si el embalaje de seguridad envuelve a Bumblebee en modo auto, su peso es 800 y su peligrosidad 7,5." {
    embalajeDeSeguridad.envolverObjeto(bumblebee)
    assert.that(embalajeDeSeguridad.nivelPeligrosidad() == 7.5 and embalajeDeSeguridad.peso() == 800)
  }


}

describe "Tiene algo que pesa entre dos valores" {
  method initialize() {
    camion.cargar(bumblebee)
    paqueteDeLadrillos.cantLadrillos(300)
    camion.cargar(paqueteDeLadrillos)

  }

  test "Camnion con Bumblebee y un paquete de 300 ladrillo, tiene algo que pesa entre 5 y 700." {
    
  }
}
